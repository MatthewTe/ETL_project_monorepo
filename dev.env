#PSQL Database Configuration - private-rest-api, rest-api-psql
POSTGRES_USER=django_rest_api
POSTGRES_PASSWORD=h%?<iak_%.G&M=O(E1EfnZ{2HJ]}/
POSTGRES_DB=rest_api
POSTGRES_PORT=5432
POSTGRES_HOST=rest-api-psql

# Django REST API Setting - private-rest-api
PRODUCTION=False
SECRET_KEY=test_django_secret_key
ALLOWED_HOST=127.0.0.1
DJANGO_SETTINGS_MODULE=private_rest_api.dev_settings
#SENTRY_PUBLIC_KEY=https://some_public_key@sdsfjnfiwe.ingest.sentry.io/1111111
#AWS_ACCESS_KEY_ID=test_AWS_KEY_ID
#AWS_SECRET_ACCESS_KEY=test_AWS_SECRET_KEY


# Celery Configuration - celery-worker:
# Celery Workers celery-worker:
MAX_AUTOSCALE=10
MIN_AUTOSCALE=4

# Redis Message Broker & Backend Configuration - celery-redis, private-rest-api
REDIS_PASSWORD=test_redis_password

# Celery Flower Monitor - celery-flower-monitor
CELERY_BROKER_URL=redis://:${REDIS_PASSWORD}@celery-redis:6379/0
CELERY_RESULT_BACKEND=redis://:${REDIS_PASSWORD}@celery-redis:6379/0
#FLOWER_OAUTH2_KEY=test_flower_key
#FLOWER_OAUTH2_SECRET=test_flower_secret
#FLOWER_OAUTH2_REDIRECT_URI=http://localhost:81/login
#FLOWER_AUTH_SCHEME=flower.views.auth.GithubLoginHandler
#FLOWER_GIT_EMAIL=test_email@gmail.com